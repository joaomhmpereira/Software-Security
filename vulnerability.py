class Vulnerability:
    def __init__(self, name, sources, sanitizers, sinks, implicit, output_file) -> None:
        self.name = name
        self.sources = sources
        self.sanitizers = sanitizers
        self.sinks = sinks
        self.implicit = implicit
        self.output_file = output_file
        self.output = []

    def get_sources(self) -> list:
        return self.sources
    
    def get_sinks(self) -> list:
        return self.sinks
    
    def get_sanitizers(self) -> list:
        return self.sanitizers

    def get_vultype(self, name) -> str:
        if name in self.sources:
            return "source"
        elif name in self.sinks:
            return "sink"
        elif name in self.sanitizers:
            return "sanitizer"
        else:
            return ""
    
    def add_instance(self, source: str, sink: str, unsanitized: bool, sanitized: list) -> None:
        if unsanitized:
            unsanitized_flows = "yes"
        else:
            unsanitized_flows = "no"
        
        self.output.append(
            {
                "vulnerability": self.name,
                "source": source,
                "sink": sink,
                "unsanitized flows": unsanitized_flows,
                "sanitized flows": sanitized
            })
        
    def __str__(self) -> str:
        return 'Vulnerability {}: sources -> {}, sanitizers -> {}, sinks -> {}, implicit flows -> {}'.format(self.name, self.sources, self.sanitizers, self.sinks, self.implicit)